# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # config.vm.box = "centos/7"
  config.vm.box = "th7nder/isdp-quick-centos"
  config.vm.synced_folder "./data", "/vagrant_data"

  def create_gluster_node(config, name, ip)
  config.vm.define name, autostart: false do |cfg|
      add_storage(cfg, "./disk-#{name}.vdi", 10)
      cfg.vm.hostname = name
      cfg.vm.provision "shell", path: "gluster.sh"
      cfg.vm.network :private_network, ip: ip, netmask: "255.255.255.0", virtualbox__intnet: "FSNetwork"
    end
  end

def add_storage(target, disk, size)
  target.vm.provider "virtualbox" do |vb|
    unless File.exist?(disk)
      vb.customize ['createhd', '--filename', disk, '--variant', 'Fixed', '--size', size * 1024]
    end
    vb.customize ['storageattach', :id,  '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk]
  end
end


  config.vm.define "ClientMachine1" do |c1|
    c1.vm.hostname = "ClientMachine1"
    c1.vm.provider "virtualbox" do |v|
      v.name = "ClientMachine1"
      v.memory = 256
    end
    # networks
    c1.vm.network "private_network", ip: "10.0.0.101", virtualbox__intnet: "netcl1", :netmask => "255.255.255.0"
    # scripts
    c1.vm.provision "shell", run: "always", path: "client-scripts/client-1-up.sh"
  end

  config.vm.define "ClientMachine2" do |c2|
    c2.vm.hostname = "ClientMachine2"
    c2.vm.provider "virtualbox" do |v|
      v.name = "ClientMachine2"
      v.memory = 256
    end
    # networks
    c2.vm.network "private_network", ip: "10.0.1.102", virtualbox__intnet: "netcl2", :netmask => "255.255.255.0"
    # scripts
    c2.vm.provision "shell", run: "always", path: "client-scripts/client-2-up.sh"
  end

  config.vm.define "ClientRouter" do |cr|
    cr.vm.hostname = "ClientRouter"
    cr.vm.provider "virtualbox" do |v|
      v.name = "ClientRouter"
      v.memory = 256
    end
    # networks  
    cr.vm.network "private_network", ip: "192.168.1.3", virtualbox__intnet: "extnet", :netmask => "255.255.255.0"
    cr.vm.network "private_network", ip: "10.0.0.1", virtualbox__intnet: "netcl1", :netmask => "255.255.255.0"
    cr.vm.network "private_network", ip: "10.0.1.1", virtualbox__intnet: "netcl2", :netmask => "255.255.255.0"
    # scripts
    cr.vm.provision "shell", run: "once", path: "router-scripts/client-router-conf.sh"
    # cr.vm.provision "shell", run: "always", path: "router-scripts/client-router-up.sh"
  end

  config.vm.define "MasterRouter" do |mr|
    mr.vm.hostname = "MasterRouter"
    mr.vm.provider "virtualbox" do |v|
      v.name = "MasterRouter"
      v.memory = 256
    end
    # networks
    mr.vm.network "private_network", ip: "192.168.1.1", virtualbox__intnet: "extnet", :netmask => "255.255.255.0"
    mr.vm.network "private_network", ip: "10.0.0.1", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    # scripts
    mr.vm.provision "shell", run: "once", path: "load-balancer-scripts/master-router-conf.sh"
    mr.vm.provision "shell", run: "always", path: "load-balancer-scripts/master-router-firewall.sh"
  end

  config.vm.define "SlaveRouter" do |sr|
    sr.vm.hostname = "SlaveRouter"
    sr.vm.provider "virtualbox" do |v|
      v.name = "SlaveRouter"
      v.memory = 256
    end
    # networks
    sr.vm.network "private_network", ip: "192.168.1.2", virtualbox__intnet: "extnet", :netmask => "255.255.255.0"
    sr.vm.network "private_network", ip: "10.0.0.2", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    # scripts
    sr.vm.provision "shell", run: "once", path: "load-balancer-scripts/slave-router-conf.sh"
    sr.vm.provision "shell", run: "always", path: "load-balancer-scripts/master-router-firewall.sh"
	sr.vm.provision "shell", run: "always", path: "load-balancer-scripts/slave-router-listing.sh"
  end

  config.vm.define "ServerMachine1" do |s1|
    s1.vm.hostname = "ServerMachine1.ex1.gr4"
    s1.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine1"
      v.memory = 256
    end
    # networks
    s1.vm.network "private_network", ip: "10.0.0.101", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s1.vm.network "private_network", ip: "172.16.0.11", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s1.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.101"
    s1.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s1.vm.provision "shell", run: "always", path: "server-scripts/servers-firewall.sh"
  end

  config.vm.define "ServerMachine2" do |s2|
    s2.vm.hostname = "ServerMachine2.ex1.gr4"
    s2.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine2"
      v.memory = 256
    end
    # networks
    s2.vm.network "private_network", ip: "10.0.0.102", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s2.vm.network "private_network", ip: "172.16.0.12", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s2.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.102"
    s2.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s2.vm.provision "shell", run: "always", path: "server-scripts/servers-firewall.sh"
  end

  config.vm.define "ServerMachine3" do |s3|
    s3.vm.hostname = "ServerMachine3.ex1.gr4"
    s3.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine3"
      v.memory = 256
    end
    # networks
    s3.vm.network "private_network", ip: "10.0.0.103", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s3.vm.network "private_network", ip: "172.16.0.13", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s3.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.103"
    s3.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s3.vm.provision "shell", run: "always", path: "server-scripts/servers-firewall.sh"
  end

  #Cluster Install
  config.vm.define "ClusterMachine1" do |cm1|
    add_storage(cm1, "./disk1.vdi", 3)
    cm1.vm.hostname = "ClusterMachine1.ex1.gr4"
    cm1.vm.provider "virtualbox" do |v|
      v.name = "ClusterMachine1"
      v.memory = 256
    end
    #networks
    cm1.vm.network "private_network", ip: "172.16.0.1", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    #scripts
    cm1.vm.provision "shell", run: "once", path: "cluster-scripts/disable-firewall.sh"
    cm1.vm.provision "shell", run: "once", path: "cluster-scripts/install-gluster.sh"
    cm1.vm.provision "shell", run: "once", path: "cluster-scripts/write-to-etchosts.sh"
    cm1.vm.provision "shell", run: "once", path: "cluster-scripts/new-partition.sh"
    cm1.vm.provision "shell", run: "once", path: "cluster-scripts/create-brick-storage.sh", args: "1"
  end

  
  config.vm.define "ClusterMachine2" do |cm2|
    add_storage(cm2, "./disk2.vdi", 3)
    cm2.vm.hostname = "ClusterMachine2.ex1.gr4"
    cm2.vm.provider "virtualbox" do |v|
      v.name = "ClusterMachine2"
      v.memory = 256
    end
    #networks
    cm2.vm.network "private_network", ip: "172.16.0.2", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    #scripts
    cm2.vm.provision "shell", run: "once", path: "cluster-scripts/disable-firewall.sh"
    cm2.vm.provision "shell", run: "once", path: "cluster-scripts/install-gluster.sh"
    cm2.vm.provision "shell", run: "once", path: "cluster-scripts/write-to-etchosts.sh"
    cm2.vm.provision "shell", run: "once", path: "cluster-scripts/new-partition.sh"
    cm2.vm.provision "shell", run: "once", path: "cluster-scripts/create-brick-storage.sh", args: "2"
  end


  
  config.vm.define "ClusterMachine3" do |cm3|
    add_storage(cm3, "./disk3.vdi", 3)
    cm3.vm.hostname = "ClusterMachine3.ex1.gr4"
    cm3.vm.provider "virtualbox" do |v|
      v.name = "ClusterMachine3"
      v.memory = 256
    end
    #networks
    cm3.vm.network "private_network", ip: "172.16.0.3", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    #scripts
    cm3.vm.provision "shell", run: "once", path: "cluster-scripts/disable-firewall.sh"
    cm3.vm.provision "shell", run: "once", path: "cluster-scripts/install-gluster.sh"
    cm3.vm.provision "shell", run: "once", path: "cluster-scripts/write-to-etchosts.sh"
    cm3.vm.provision "shell", run: "once", path: "cluster-scripts/new-partition.sh"
    cm3.vm.provision "shell", run: "once", path: "cluster-scripts/create-brick-storage.sh", args: "3"
  end


 
  config.vm.define "ClusterMachine4" do |cm4|
    add_storage(cm4, "./disk4.vdi", 3)
    cm4.vm.hostname = "ClusterMachine4.ex1.gr4"
    cm4.vm.provider "virtualbox" do |v| 
      v.name = "ClusterMachine4"
      v.memory = 256
    end
    #networks
    cm4.vm.network "private_network", ip: "172.16.0.4", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    #scripts
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/disable-firewall.sh"
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/install-gluster.sh"
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/write-to-etchosts.sh"
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/cluste-peer.sh"
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/new-partition.sh"
    cm4.vm.provision "shell", run: "once", path: "cluster-scripts/create-brick-storage.sh", args: "4"
  end
end

# def add_storage(target, disk, size, name)
#   target.vm.provider "virtualbox" do |vb|
#     unless File.exist?(disk)
#       vb.customize ['createhd', '--filename', disk, '--variant', 'Fixed', '--size', size * 1024]
#     end
#     vb.customize ['storagectl', :id, '--name', 'IDE', '--add', 'sata', '--portcount', 4]
#     vb.customize ['storageattach', :id,  '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', disk]
#   end
# end