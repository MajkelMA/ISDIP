# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.synced_folder "./data", "/vagrant_data"

  config.vm.define "Client1" do |c1|
    c1.vm.hostname = "ClientMachine1"
    c1.vm.provider "virtualbox" do |v|
      v.name = "Client1"
      v.memory = 256
    end
    # networks
    c1.vm.network "private_network", ip: "10.0.0.101", virtualbox__intnet: "netcl1", :netmask => "255.255.255.0"
    # scripts
    c1.vm.provision "shell", run: "always", path: "client-scripts/client-1-up.sh"
	  c1.vm.provision "shell", run: "always", path: "client-scripts/client-1-listing.sh"
  end

  config.vm.define "Client2" do |c2|
    c2.vm.hostname = "ClientMachine2"
    c2.vm.provider "virtualbox" do |v|
      v.name = "Client2"
      v.memory = 256
    end
    # networks
    c2.vm.network "private_network", ip: "10.0.1.102", virtualbox__intnet: "netcl2", :netmask => "255.255.255.0"
    # scripts
    c2.vm.provision "shell", run: "always", path: "client-scripts/client-2-up.sh"
	  c2.vm.provision "shell", run: "always", path: "client-scripts/client-2-listing.sh"
  end

  config.vm.define "ClientRouter" do |cr|
    cr.vm.hostname = "ClientRouter1"
    cr.vm.provider "virtualbox" do |v|
      v.name = "ClientRouter"
      v.memory = 256
    end
    # networks  
    cr.vm.network "private_network", bridge: "eth1", ip: "192.168.1.3", virtualbox__intnet: "extnet", :netmask => "255.255.255.0"
    cr.vm.network "private_network", bridge: "eth2", ip: "10.0.0.1", virtualbox__intnet: "netcl1", :netmask => "255.255.255.0"
    cr.vm.network "private_network", bridge: "eth3", ip: "10.0.1.1", virtualbox__intnet: "netcl2", :netmask => "255.255.255.0"
    # scripts
    cr.vm.provision "shell", run: "once", path: "router-scripts/client-router-conf.sh"
    cr.vm.provision "shell", run: "always", path: "router-scripts/client-router-up.sh"
	  cr.vm.provision "shell", run: "always", path: "router-scripts/client-router-listing.sh"
  end

  config.vm.define "MasterRouter" do |mr|
    mr.vm.hostname = "MasterRouter"
    mr.vm.provider "virtualbox" do |v|
      v.name = "MasterRouter"
      v.memory = 256
    end
    # networks
    mr.vm.network "private_network", ip: "192.168.1.1", virtualbox__intnet: "extnet", :netmask => "255.255.255.0"
    mr.vm.network "private_network", ip: "10.0.0.1", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    # scripts
    mr.vm.provision "shell", run: "once", path: "load-balancer-scripts/master-router-conf.sh"
    mr.vm.provision "shell", run: "always", path: "load-balancer-scripts/master-router-up.sh"
    mr.vm.provision "shell", run: "always", path: "load-balancer-scripts/master-router-listing.sh"
  end

  # config.vm.define "SlaveRouter" do |sr|
  #   sr.vm.hostname = "SlaveRouter"iptables -t filter -L FORWARD -n
  #   sr.vm.provider "virtualbox" do |v|
  #     v.name = "SlaveRouter"
  #     v.memory = 512
  #   end
  #   sr.vm.network "private_network", ip: "192.168.1.2/24", virtualbox__intnet: true
  #   sr.vm.network "private_network", ip: "10.0.0.2/24", virtualbox__intnet: true
  # end

  config.vm.define "ServerMachine1" do |s1|
    s1.vm.hostname = "ServerMachine1.ex1.gr4"
    s1.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine1"
      v.memory = 256
    end
    # networks
    s1.vm.network "private_network", ip: "10.0.0.101", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s1.vm.network "private_network", ip: "172.16.0.11", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s1.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.101"
    s1.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s1.vm.provision "shell", run: "always", path: "server-scripts/server-1-listing.sh"
  end

  config.vm.define "ServerMachine2" do |s2|
    s2.vm.hostname = "ServerMachine2.ex1.gr4"
    s2.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine2"
      v.memory = 256
    end
    # networks
    s2.vm.network "private_network", ip: "10.0.0.102", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s2.vm.network "private_network", ip: "172.16.0.12", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s2.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.102"
    s2.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s2.vm.provision "shell", run: "always", path: "server-scripts/server-2-listing.sh"
  end

  config.vm.define "ServerMachine3" do |s3|
    s3.vm.hostname = "ServerMachine3.ex1.gr4"
    s3.vm.provider "virtualbox" do |v|
      v.name = "ServerMachine3"
      v.memory = 256
    end
    # networks
    s3.vm.network "private_network", ip: "10.0.0.103", virtualbox__intnet: "intnet", :netmask => "255.255.255.0"
    s3.vm.network "private_network", ip: "172.16.0.13", virtualbox__intnet: "clusternet", :netmask => "255.255.255.0"
    # scripts
    s3.vm.provision "shell", run: "once", path: "server-scripts/install-httpd.sh", args: "10.0.0.103"
    s3.vm.provision "shell", run: "always", path: "server-scripts/servers-up.sh"
    s3.vm.provision "shell", run: "always", path: "server-scripts/server-3-listing.sh"
  end
end